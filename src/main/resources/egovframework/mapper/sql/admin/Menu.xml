<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MenuAdminDAO">
    <select id="findAllMenu" parameterType="String" resultType="menuEntity">
        WITH RECURSIVE RECUR_DATA AS(
            SELECT  MENU_ID,
                    MENU_NM,
                    MENU_LV,
                    PARENT_ID,
                    MENU_URL,
                    ORD,
                    MENU_TYPE,
                    USE_YN,
                    AUTH_ROLE,
                    '' || MENU_ID AS MENU_IDS,
                    ORD AS PARENT_ORD
            FROM    MENU_TB
            WHERE   MENU_LV = 1
              AND     AUTH_ROLE = #{auth_role}
            UNION
            SELECT  B.MENU_ID,
                    B.MENU_NM,
                    B.MENU_LV,
                    B.PARENT_ID,
                    B.MENU_URL,
                    B.ORD,
                    B.MENU_TYPE,
                    B.USE_YN,
                    B.AUTH_ROLE,
                    A.MENU_IDS || ',' || B.MENU_ID AS MENU_IDS,
                    A.ORD AS PARENT_ORD
            FROM    RECUR_DATA A
                        INNER JOIN MENU_TB B ON A.MENU_ID = B.PARENT_ID
            WHERE B.AUTH_ROLE = #{auth_role}
        )
        SELECT  MENU_ID,
                MENU_NM,
                MENU_LV,
                PARENT_ID,
                MENU_URL,
                ORD,
                MENU_TYPE,
                USE_YN,
                AUTH_ROLE,
                (SELECT MENU_NM FROM MENU_TB A WHERE A.MENU_ID = B.PARENT_ID) AS PARENT_NM
        FROM    RECUR_DATA B
        WHERE   AUTH_ROLE = #{auth_role}
        ORDER BY PARENT_ORD, MENU_IDS, ORD
    </select>

    <select id="findByAuthRoleAndMenuLv1" parameterType="menuEntity" resultType="menuEntity">
        SELECT MENU_ID,
               MENU_NM,
               MENU_LV,
               PARENT_ID,
               MENU_URL,
               ORD,
               MENU_TYPE,
               USE_YN
        FROM   MENU_TB
        WHERE  MENU_LV = 1
          AND  AUTH_ROLE = #{auth_role}
          <if test="parent_id != null and parent_id != ''">
          AND  MENU_ID = #{parent_id}
          </if>
        ORDER BY CAST(ORD AS INTEGER) ASC
    </select>

    <update id="updateMainYnAllN" parameterType="menuEntity">
        UPDATE 	MENU_TB
        SET 	MAIN_YN = 'N'
        WHERE 	AUTH_ROLE = #{auth_role}
    </update>

    <insert id="save" parameterType="menuEntity">
        INSERT INTO MENU_TB
        (
            MENU_ID,
            MENU_NM,
            MENU_LV,
            PARENT_ID,
            MENU_URL,
            ORD,
            MENU_TYPE,
            USE_YN,
            AUTH_ROLE,
            MAIN_YN,
            CREATED_AT
        )
        VALUES
        (
            nextval('menu_seq'),
            #{menu_nm},
            #{menu_lv},
            #{parent_id},
            #{menu_url},
            #{ord},
            #{menu_type},
            #{use_yn},
            #{auth_role},
            #{main_yn},
            now()
        )
    </insert>

    <select id="findByMenuId" parameterType="int" resultType="menuEntity">
        SELECT MENU_ID,
               MENU_NM,
               MENU_LV,
               PARENT_ID,
               MENU_URL,
               ORD,
               MENU_TYPE,
               USE_YN,
               AUTH_ROLE,
               MAIN_YN
        FROM   MENU_TB
        WHERE  MENU_ID = #{menu_id}
    </select>

    <update id="updateMenu" parameterType="menuEntity">
        UPDATE 	MENU_TB
        SET 	UPDATED_AT = now()
                <if test="menu_nm != null and menu_nm != ''">
                , MENU_NM = #{menu_nm}
                </if>
                <if test="menu_url != null and menu_url != ''">
                , MENU_URL = #{menu_url}
                </if>
                <if test="ord != null and ord != ''">
                , ORD = #{ord}
                </if>
                <if test="menu_type != null and menu_type != ''">
                , MENU_TYPE = #{menu_type}
                </if>
                <if test="use_yn != null and use_yn != ''">
                , USE_YN = #{use_yn}
                </if>
                <if test="main_yn != null and main_yn != ''">
                , MAIN_YN = #{main_yn}
                </if>
        WHERE 	MENU_ID = #{menu_id}
    </update>

    <select id="findByParentId" parameterType="int" resultType="menuEntity">
        SELECT MENU_ID,
               MENU_NM,
               MENU_LV,
               PARENT_ID,
               MENU_URL,
               ORD,
               MENU_TYPE,
               USE_YN
        FROM   MENU_TB
        WHERE  MENU_LV = 2
        AND    PARENT_ID = #{menu_id}
        ORDER BY CAST(ORD AS INTEGER) ASC
    </select>

    <select id="countByChild" parameterType="int" resultType="int">
        SELECT COUNT(*)
        FROM   MENU_TB
        WHERE  MENU_LV = 2
          AND  PARENT_ID = #{menu_id}
    </select>

    <delete id="deleteByMenuId" parameterType="int">
        DELETE  FROM MENU_TB
        WHERE   MENU_ID = #{menu_id}
    </delete>

    <select id="findByMenuLvAndAuthId" parameterType="menuEntity" resultType="menuEntity">
        SELECT  A.MENU_ID,
                A.MENU_NM,
                A.MENU_LV,
                (SELECT MENU_NM FROM MENU_TB C WHERE C.MENU_ID = A.PARENT_ID) AS PARENT_NM,
                A.PARENT_ID,
                A.MENU_URL,
                A.ORD,
                A.MENU_TYPE,
                A.USE_YN,
                B.AUTH_ID
        FROM    MENU_TB A
        LEFT OUTER JOIN AUTH_MENU_TB B
        ON A.MENU_ID = B.MENU_ID
        WHERE   A.MENU_LV = #{menu_lv}
        AND     B.AUTH_ID = #{auth_id}
        AND     A.USE_YN = 'Y'
        ORDER BY CAST(ORD AS INTEGER) ASC
    </select>

    <select id="findByMainUrl" parameterType="menuEntity" resultType="menuEntity">
        SELECT  MENU_ID
                , MENU_NM
                , MENU_LV
                , PARENT_ID
                , MENU_URL
                , PARENT_NM
        FROM    (
                     SELECT *
                     FROM   (
                                SELECT  0 AS MENU_ID
                                        , CODE_NM AS MENU_NM
                                        , 1 AS MENU_LV
                                        , 0 AS PARENT_ID
                                        , CODE_VAL AS MENU_URL
                                        , '메인' AS PARENT_NM
                                        , 1 AS ORD
                                FROM    CODE_TB
                                WHERE   CODE_GRP_ID = (SELECT CODE_GRP_ID FROM CODE_GRP_TB CGT  WHERE CODE_GRP_VAL = 'MAIN_URL')
                                AND     USE_YN = 'Y'
                                ORDER BY CAST(ORD AS INTEGER) ASC
                                LIMIT 1
                          ) A
                     UNION ALL
                     SELECT *
                     FROM   (
                                SELECT  A.MENU_ID
                                        , A.MENU_NM
                                        , A.MENU_LV
                                        , A.PARENT_ID
                                        , A.MENU_URL
                                        , (SELECT MENU_NM FROM MENU_TB C WHERE C.MENU_ID = A.PARENT_ID) AS PARENT_NM
                                        , 2 AS ORD
                                FROM    MENU_TB A
                                LEFT OUTER JOIN AUTH_MENU_TB B
                                ON      A.MENU_ID = B.MENU_ID
                                WHERE   A.MAIN_YN = 'Y'
                                AND     A.USE_YN = 'Y'
                                AND     A.AUTH_ROLE = 'ADMIN'
                                AND     B.AUTH_ID = #{auth_id}
                            ) B
                     UNION ALL
                     SELECT *
                     FROM   (
                                SELECT  A.MENU_ID
                                        , A.MENU_NM
                                        , A.MENU_LV
                                        , A.PARENT_ID
                                        , A.MENU_URL
                                        , (SELECT MENU_NM FROM MENU_TB C WHERE C.MENU_ID = A.PARENT_ID) AS PARENT_NM
                                        , 3 AS ORD
                                FROM    MENU_TB A
                                LEFT OUTER JOIN AUTH_MENU_TB B
                                ON      A.MENU_ID = B.MENU_ID
                                WHERE   A.USE_YN = 'Y'
                                AND     A.MENU_LV = 2
                                AND     A.AUTH_ROLE = 'ADMIN'
                                AND     B.AUTH_ID = #{auth_id}
                                ORDER BY A.CREATED_AT ASC
                                LIMIT 1
                          ) C
                ) A
        ORDER BY ORD ASC
        LIMIT 1
    </select>

</mapper>